# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_CICD_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE
          # Python
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          # NodeJS
          cd frontend
          npm ci

      - name: Build
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'synth'

      - name: Set Artifact Name
        run: |
          echo "DATETIME=$((date +%Y.%m.%d.%H.%M))" >> "$GITHUB_OUTPUT"
          echo "ARTIFACT_NAME=toad-in-the-hole-$DATETIME.tar.gz" >> "$GITHUB_OUTPUT"

      - name: Package
        run: |
          tar -czf ${{ steps.vars.output.ARTIFACT_NAME }} cdk.out/

      - name: Upload
        run: |
          aws s3 cp ${{ steps.vars.output.ARTIFACT_NAME }} ${{ vars.ARTIFACT_BUCKET }}
